
          @@ -0,0 +1,106 @@
        1 +# ~/.bashrc: executed by bash(1) for non-login shells.
        2 +# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
        3 +# for examples
        4 +
        5 +# If not running interactively, don't do anything
        6 +[ -z "$PS1" ] && return
        7 +
        8 +# don't put duplicate lines in the history. See bash(1) for more options
        9 +# ... or force ignoredups and ignorespace
       10 +HISTCONTROL=ignoredups:ignorespace
       11 +
       12 +# append to the history file, don't overwrite it
       13 +shopt -s histappend
       14 +
       15 +# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
       16 +HISTSIZE=1000
       17 +HISTFILESIZE=2000
       18 +
       19 +# check the window size after each command and, if necessary,
       20 +# update the values of LINES and COLUMNS.
       21 +shopt -s checkwinsize
       22 +
       23 +# make less more friendly for non-text input files, see lesspipe(1)
       24 +[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"
       25 +
       26 +# set variable identifying the chroot you work in (used in the prompt below)
       27 +if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
       28 +    debian_chroot=$(cat /etc/debian_chroot)
       29 +fi
       30 +
       31 +# set a fancy prompt (non-color, unless we know we "want" color)
       32 +case "$TERM" in
       33 +    xterm-color) color_prompt=yes;;
       34 +esac
       35 +
       36 +# uncomment for a colored prompt, if the terminal has the capability; turned
       37 +# off by default to not distract the user: the focus in a terminal window
       38 +# should be on the output of commands, not on the prompt
       39 +#force_color_prompt=yes
       40 +
       41 +if [ -n "$force_color_prompt" ]; then
       42 +    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
       43 + # We have color support; assume it's compliant with Ecma-48
       44 + # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
       45 + # a case would tend to support setf rather than setaf.)
       46 + color_prompt=yes
       47 +    else
       48 + color_prompt=
       49 +    fi
       50 +fi
       51 +
       52 +if [ "$color_prompt" = yes ]; then
       53 +    PS1="\[\033[0;31m\]\342\224\214\342\224\200\$([[ \$? != 0 ]] && echo \"[\[\033[0;31m\]\342\234\227\[\033[0;37m\]]\342\224\200\")[$(if [[ ${EUID} == 0 ]]; then echo '\[\033[01;31m\]root\[\033[01;33m\]@\[\033[01;96m\]\h'; else echo '\[\033[0;39m\]\u\[\033[01;33m\]@\[\033[01;96m\]\h'; fi)\[\033[0;31m\]]\342\224\200[\[\033[0;32m\]\w\[\033[0;31m\]]\n\[\033[0;31m\]\342\224\224\342\224\200\342\224\200\342\225\274 \[\033[0m\]\[\e[01;33m\]\\$\[\e[0m\]"
       54 +    #PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
       55 +else
       56 +    PS1="\[\033[0;31m\]\342\224\214\342\224\200\$([[ \$? != 0 ]] && echo \"[\[\033[0;31m\]\342\234\227\[\033[0;37m\]]\342\224\200\")[$(if [[ ${EUID} == 0 ]]; then echo '\[\033[01;31m\]root\[\033[01;33m\]@\[\033[01;96m\]\h'; else echo '\[\033[0;39m\]\u\[\033[01;33m\]@\[\033[01;96m\]\h'; fi)\[\033[0;31m\]]\342\224\200[\[\033[0;32m\]\w\[\033[0;31m\]]\n\[\033[0;31m\]\342\224\224\342\224\200\342\224\200\342\225\274 \[\033[0m\]\[\e[01;33m\]\\$\[\e[0m\]"
       57 +    #PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
       58 +fi
       59 +unset color_prompt force_color_prompt
       60 +
       61 +# If this is an xterm set the title to user@host:dir
       62 +case "$TERM" in
       63 +xterm*|rxvt*)
       64 +    PS1="\[\033[0;31m\]\342\224\214\342\224\200\$([[ \$? != 0 ]] && echo \"[\[\033[0;31m\]\342\234\227\[\033[0;37m\]]\342\224\200\")[$(if [[ ${EUID} == 0 ]]; then echo '\[\033[01;31m\]root\[\033[01;33m\]@\[\033[01;96m\]\h'; else echo '\[\033[0;39m\]\u\[\033[01;33m\]@\[\033[01;96m\]\h'; fi)\[\033[0;31m\]]\342\224\200[\[\033[0;32m\]\w\[\033[0;31m\]]\n\[\033[0;31m\]\342\224\224\342\224\200\342\224\200\342\225\274 \[\033[0m\]\[\e[01;33m\]\\$\[\e[0m\]"
       65 +    #PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
       66 +    ;;
       67 +*)
       68 +    ;;
       69 +esac
       70 +
       71 +# enable color support of ls and also add handy aliases
       72 +if [ -x /usr/bin/dircolors ]; then
       73 +    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
       74 +    alias ls='ls --color=auto'
       75 +    #alias dir='dir --color=auto'
       76 +    #alias vdir='vdir --color=auto'
       77 +
       78 +    alias grep='grep --color=auto'
       79 +    alias fgrep='fgrep --color=auto'
       80 +    alias egrep='egrep --color=auto'
       81 +fi
       82 +
       83 +# some more ls aliases
       84 +alias ll='ls -alF'
       85 +alias la='ls -A'
       86 +alias l='ls -CF'
       87 +
       88 +# Add an "alert" alias for long running commands.  Use like so:
       89 +#   sleep 10; alert
       90 +alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
       91 +
       92 +# Alias definitions.
       93 +# You may want to put all your additions into a separate file like
       94 +# ~/.bash_aliases, instead of adding them here directly.
       95 +# See /usr/share/doc/bash-doc/examples in the bash-doc package.
       96 +
       97 +if [ -f ~/.bash_aliases ]; then
       98 +    . ~/.bash_aliases
       99 +fi
      100 +
      101 +# enable programmable completion features (you don't need to enable
      102 +# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
      103 +# sources /etc/bash.bashrc).
      104 +if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
      105 +    . /etc/bash_completion
      106 +fi